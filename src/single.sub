#!/bin/bash
##
## GPU submission script for PBS on CRESCENT
## -----------------------------------------
##
## Follow the 6 steps below to configure your job
## 
## STEP 1:
##
## Enter a job name after the -N on the line below:
##
#PBS -N gpu_main
##
## STEP 2:
##
## Select the number of cpus/cores and GPUs required by modifying the #PBS -l select line below
##
## The Maximum value for ncpus is 8 and mpiprocs MUST be the same value as ncpus.
## The Maximum value for ngpus is 1 
## e.g.	 1 GPU and 8 CPUs : select=1:ncpus=8:mpiprocs=8;ngpus=1
##
#PBS -l select=1:ncpus=1:mpiprocs=1:ngpus=1
##
## STEP 3:
##
## There is only one queue for GPU jobs as defined in the #PBS -q line below
##
#PBS -q gpu
##
## The default walltime in the gpu queue is one day(24 hours)
## The maximum walltime in the gpu queue is five days(120 hours)
## In order to increase the walltime modify the #PBS -l walltime line below
## and remove one of the leading # characters 
##
##PBS -l walltime=24:00:00
##
## STEP 4:
##
## Replace the hpc@cranfield.ac.uk email address
## with your Cranfield email address on the #PBS -M line below:
## Your email address is NOT your username
##
#PBS -m abe 
#PBS -M yusuf.ganiyu.207@cranfield.ac.uk
##
## ====================================
## DO NOT CHANGE THE LINES BETWEEN HERE
## ====================================
#PBS -j oe
#PBS -v "CUDA_VISIBLE_DEVICES="
#PBS -W sandbox=PRIVATE
#PBS -k n
ln -s $PWD $PBS_O_WORKDIR/$PBS_JOBID
## Allocated gpu(s)
echo CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES
## Change to working directory
cd $PBS_O_WORKDIR
## Calculate number of CPUs and GPUs
export cpus=`cat $PBS_NODEFILE | wc -l`
export gpus=`echo $CUDA_VISIBLE_DEVICES|awk -F"," '{print NF}'`
## ========
## AND HERE
## ========
##
## STEP 5: 
## 
##  Load the default application environment
##  For a specific version add the version number, e.g.
##  module load CUDA/8.0.44
##
module load CUDA
##
## STEP 6: 
## 
## Run gpu application 
##
## Put correct parameters and cuda application in the line below:
##


#cuda-memcheck ./CUDA/CSR/CSR_2DB ../input/af_1_k101/af_1_k101.mtx
#cuda-gdb --args ./CUDA/CSR/CSR_1DB ../input/af_1_k101/af_1_k101.mtx -d 1 1 1 -g 64 64 64 -s 100 --periodic 1 1 1
#cuda-memcheck ./CUDA/CSR/CSR_2DB ../input/af_1_k101/af_1_k101.mtx
#cuda-memcheck ./CUDA/CSR/CSR_1DB ../input/af_1_k101/af_1_k101.mtx
./CUDA/ELLPACK/EBlock1TH ../input/cant/cant.mtx
./CUDA/ELLPACK/EBlock2DB_2H ../input/cant/cant.mtx
#./CUDA/ELLPACK/EBlock2DB_4H ../input/cant/cant.mtx
#./CUDA/ELLPACK/EBlock2DB_8H ../input/cant/cant.mtx
#./CUDA/ELLPACK/EBlock2DB_16H ../input/cant/cant.mtx
## Tidy up the log directory
## DO NOT CHANGE THE LINE BELOW
## ============================
rm $PBS_O_WORKDIR/$PBS_JOBID
#
